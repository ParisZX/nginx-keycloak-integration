events {
  worker_connections 1024;
}

http {

  resolver 8.8.8.8;

  upstream nodejs {
    server nodejs:3000;
  }

  server {
    listen 80;

    location / {
      proxy_pass http://nodejs;
      auth_request /auth;
    }

    location = /auth {
      internal;
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";
      proxy_pass http://keycloak:8080/auth/realms/your_realm_name/protocol/openid-connect/auth?client_id=your_client_id&response_type=code;
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
      proxy_intercept_errors on;
      error_page 302 = @handle_redirect;
    }

    location @handle_redirect {
      set $auth_url $upstream_http_location;
      add_header Location $auth_url;
      return 302;
    }
  }
}
